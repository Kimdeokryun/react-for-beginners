{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\React-Semi-Project\\\\react-for-beginners\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport Button from \"./Button\";\nimport styles from \"./App.module.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Hello() {\n  _s();\n  function destroyedFn() {\n    console.log(\"bye :(\");\n  }\n  function effectFn() {\n    console.log(\"created :)\");\n    return destroyedFn;\n  }\n  useEffect(effectFn, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n}\n_s(Hello, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Hello;\nfunction App() {\n  _s2();\n  const [showing, setShowing] = useState(false);\n  const onClick = () => setShowing(prev => !prev);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showing ? /*#__PURE__*/_jsxDEV(Hello, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: showing ? \"Hide\" : \"Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n\n  /*    20231101\r\n  const [counter, setValue] = useState(0);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const onClick = () => setValue((prev) => prev + 1);\r\n  const onChange = (event) => setKeyword(event.target.value);\r\n    // console.log(\"i run all the time\");\r\n    useEffect(() => {     // 최초 한 번만 실행\r\n    console.log(\"I run only once.\");\r\n  }, []);\r\n    useEffect(() => {     // key word 변화 시에만 실행\r\n    // if(keyword !== \"\" && keyword.length > 5)  // (최초 실행 X, value 길이 지정)\r\n    console.log(\"I run when 'keyword' changes\");\r\n  }, [keyword]);\r\n    useEffect(() => {     // counter 변화 시에만 실행  \r\n    console.log(\"I run when 'counter' changes\");\r\n  }, [counter]);\r\n    return (\r\n    <div>\r\n      <input value={keyword} onChange={onChange} type=\"text\" placeholder=\"Search here...\" />\r\n      <h1>{counter}</h1>\r\n      <button onClick={onClick}>Click me</button>\r\n    </div>\r\n  );*/\n}\n_s2(App, \"ZGmcKw9rD9kShTa3xksTCmQA528=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Hello\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Button","styles","useState","useEffect","jsxDEV","_jsxDEV","Hello","_s","destroyedFn","console","log","effectFn","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","showing","setShowing","onClick","prev","_c2","$RefreshReg$"],"sources":["D:/Github/React-Semi-Project/react-for-beginners/src/App.js"],"sourcesContent":["import Button from \"./Button\";\r\nimport styles from \"./App.module.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Hello() {\r\n\r\n  function destroyedFn() {\r\n    console.log(\"bye :(\");\r\n  }\r\n\r\n  function effectFn() {\r\n    console.log(\"created :)\");\r\n    return destroyedFn;\r\n  }\r\n\r\n  useEffect(effectFn, []);\r\n  return <h1>Hello</h1> ;\r\n}\r\n\r\nfunction App() {\r\n  const [showing, setShowing] = useState(false);\r\n  const onClick = () => setShowing((prev) => !prev);\r\n  return (\r\n    <div>\r\n      {showing ? <Hello/> : null}\r\n      <button onClick={onClick}>{showing ? \"Hide\" : \"Show\"}</button>\r\n    </div>\r\n  );\r\n\r\n  /*    20231101\r\n  const [counter, setValue] = useState(0);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const onClick = () => setValue((prev) => prev + 1);\r\n  const onChange = (event) => setKeyword(event.target.value);\r\n\r\n  // console.log(\"i run all the time\");\r\n\r\n  useEffect(() => {     // 최초 한 번만 실행\r\n    console.log(\"I run only once.\");\r\n  }, []);\r\n\r\n  useEffect(() => {     // key word 변화 시에만 실행\r\n    // if(keyword !== \"\" && keyword.length > 5)  // (최초 실행 X, value 길이 지정)\r\n    console.log(\"I run when 'keyword' changes\");\r\n  }, [keyword]);\r\n\r\n  useEffect(() => {     // counter 변화 시에만 실행  \r\n    console.log(\"I run when 'counter' changes\");\r\n  }, [counter]);\r\n\r\n  return (\r\n    <div>\r\n      <input value={keyword} onChange={onChange} type=\"text\" placeholder=\"Search here...\" />\r\n      <h1>{counter}</h1>\r\n      <button onClick={onClick}>Click me</button>\r\n    </div>\r\n  );*/\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEf,SAASC,WAAWA,CAAA,EAAG;IACrBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvB;EAEA,SAASC,QAAQA,CAAA,EAAG;IAClBF,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB,OAAOF,WAAW;EACpB;EAEAL,SAAS,CAACQ,QAAQ,EAAE,EAAE,CAAC;EACvB,oBAAON,OAAA;IAAAO,QAAA,EAAI;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACvB;AAACT,EAAA,CAbQD,KAAK;AAAAW,EAAA,GAALX,KAAK;AAed,SAASY,GAAGA,CAAA,EAAG;EAAAC,GAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMoB,OAAO,GAAGA,CAAA,KAAMD,UAAU,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EACjD,oBACElB,OAAA;IAAAO,QAAA,GACGQ,OAAO,gBAAGf,OAAA,CAACC,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,GAAG,IAAI,eAC1BX,OAAA;MAAQiB,OAAO,EAAEA,OAAQ;MAAAV,QAAA,EAAEQ,OAAO,GAAG,MAAM,GAAG;IAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;;EAGR;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAACG,GAAA,CAtCQD,GAAG;AAAAM,GAAA,GAAHN,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}